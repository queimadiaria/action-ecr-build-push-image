name: 'Deploy Service ECS'
description: 'Queima Labs DevOps Stack - Deploy Microservice - services no ECS da AWS'
inputs:
  stage:
    description: Stage where will be deployed
    required: true
  new_relic_license: 
    description: New Relic License Key
    required: true
  access_token: 
    description: Personal Access Token scope read:pkg
    required: true
  environment_acronym: 
    description: Environment acronym to configure environment variables
    required: true
  config:
    description: String JSON to be map
    required: true
    default: "{\"NODE_ENV\":\"local\"}"
  enable_task_definition:
    description: Enable returning task definition
    required: true
    default: 'true'
  service_name: 
    description: Service name
    required: true
  image_full_name:
    description: ECR Repository Image name
    required: true
outputs:
  image:
    description: "Image name complete"
    value: ${{ steps.build-image.outputs.image }}
runs:
  using: "composite"
  steps:
    - name: Checkout Repo
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/dockercache
        key: ${{ runner.os }}-${{ inputs.cache_name }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-${{ inputs.cache_name }}-buildx-

    - uses: queimadiaria/action-vault-aws@main
      with:
        vault_addr: ${{ inputs.vault_addr }}
        awsqueima_environment: ${{ inputs.awsqueima_environment }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Get Environment names
      shell: bash
      env:
        ENVIRONMENT: ${{ inputs.environment_acronym }}
        CONFIG: ${{ inputs.config }}
      run: |
        cat>configs<<EOF
        $(echo $CONFIG | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]")
        EOF
        source configs
        bash config/environment.config.sh
        cat .env
   
    - name: Configure NPM
      shell: bash
      env:
        NODE_AUTH_TOKEN: ${{ inputs.access_token  }}
      run: |
        cat <<EOF > .npmrc
        @queimadiaria:registry=https://npm.pkg.github.com/
        //npm.pkg.github.com/:_authToken=$NODE_AUTH_TOKEN
        EOF

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags:  ${{ inputs.image_full_name }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        build-args: |
          NODE_ENV=${NODE_ENV}
          NEW_RELIC_LICENSE_KEY=${{ inputs.new_relic_license }}
          NEW_RELIC_APP_NAME=${{ inputs.service_name }}-${{ inputs.stage }}
    
    - name: Image digest
      shell: bash
      run: echo ${{ steps.docker_build.outputs.digest }}       